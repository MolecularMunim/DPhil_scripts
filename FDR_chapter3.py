import numpy as np

def benjamini_hochberg_safe(p_values):
    """
    Apply Benjaminiâ€“Hochberg FDR correction while ignoring None/NaN values.
    Returns a list with corrected values, preserving original order.
    """
    # Convert to numpy array
    p_values = np.array(p_values, dtype=object)

    # Identify valid entries
    valid_mask = np.array([p is not None and not np.isnan(p) for p in p_values], dtype=bool)
    valid_p = np.array([p for p in p_values if p is not None and not np.isnan(p)], dtype=float)

    # Apply BH correction only to valid values
    n = len(valid_p)
    sorted_idx = np.argsort(valid_p)
    sorted_p = valid_p[sorted_idx]

    adjusted = np.empty(n)
    cumulative_min = 1.0
    for i in range(n - 1, -1, -1):
        rank = i + 1
        bh_value = sorted_p[i] * n / rank
        cumulative_min = min(cumulative_min, bh_value)
        adjusted[i] = cumulative_min

    adjusted_pvals = np.empty(n)
    adjusted_pvals[sorted_idx] = np.minimum(adjusted, 1.0)

    # Reinsert adjusted values in original order
    result = []
    j = 0
    for valid in valid_mask:
        if valid:
            result.append(float(adjusted_pvals[j]))
            j += 1
        else:
            result.append(None)

    return result

Brawand = [
    2.40e-20, 0.000299114, 0.006241477, 0.004161538, 0.851826093, 0.073504191,
    0.210117391, 0.119759957, 0.126292795, 0.332627179, 0.003503591, 0.030966738,
    0.002453503, 0.068125363, 0.121491095, 0.251367019, 0.520492055, 1.0,
    0.068084015, 0.384261721, 0.363513079, 0.138040843, 0.284473405, 0.216190667,
    0.400778021, 0.470142275, 0.702577253, 0.51958096, 0.030738242, 0.142492467,
    0.105119609, 1.0, 0.026748953, 0.082244116, 0.142492467, 1.0, 0.448149139,
    0.005369667, None, 0.00256563, 0.142403514, 0.014482738, None, 0.142397768,
    0.800609831, 0.519541059, 0.024949677, None, 0.110200654, 0.236411148,
    6.00e-08, 0.519103042, 1.0, 0.142407923, 0.068092866, 0.640575847,
    0.643872512, 0.871790064, 0.221865107, 0.014209394, 1.0, 0.068093861,
    0.142418309, 0.274848192, 0.386332855, 0.065598009, 0.010263594, 0.285261419,
    1.0, 0.20502307, 0.154126474, 0.253225199, 1.0, 0.644347121, 0.032712585,
    0.011244597, 0.654824214, 1.0, 0.008237918, 0.292512482, 0.314050299,
    0.868505357, 0.123878613, 0.028502634, 1.0, 0.508951116, 0.128084393,
    0.035287876, 0.142397768, 0.113663512, 0.150040332, 0.002975743, 0.12597847,
    0.285209769, 0.002565804, None, 0.074038248, 1.0, 0.648263954, 0.442512217,
    3.76e-26, 3.49e-14, 8.72e-12, 0.173276747, 1.13e-26, 6.14e-12, 1.02e-11,
    0.000025
]

ENCODE = [
    1.26e-26, 3.86e-15, 5.12e-17, 0.001290076, 9.87e-09, 6.61e-10, 0.145196941,
    0.004136193, 5.67e-06, 3.65e-12, 0.002914965, 0.466006151, 1.01e-27,
    1.16e-05, 0.969485976, 0.197312503, 0.00211672, 0.047903124, 0.014802637,
    6.13e-41, 1.26e-15, 0.00019899, 0.074095205, 0.209331605, 7.99e-15,
    3.61e-06, 0.990815716, 0.113573264, 0.029739663, 0.042151887, 0.000404389,
    0.005938162, 0.000160683, 0.012541691, 0.095451131, 0.000517207,
    0.032156638, 1.55e-10, 0.004940004, 7.18e-24, 0.006426258, 8.84e-14,
    0.097756281, 0.000337127, 4.66e-08, 9.52e-06, 0.305137997, 0.22059657,
    1.07e-14, 0.017720512, 0.000102999, 0.721334905, 0.029300712, 0.21671626,
    1.86e-05, 1.96e-07, 0.000957652, 0.235696954, 1.25e-11, 1.21e-05,
    5.01e-05, 0.183351122, 0.001301233, 0.000334642, 0.007317158, 2.23e-14,
    1.02e-24, 0.00195934, 1.47e-07, 0.0000137, 1.07e-09, 3.47e-09, 1.50e-10,
    1.83e-09, 0.000614408, 0.040823645, 2.00e-24, 1.18e-18, 1.91e-16,
    2.08e-12, 2.64e-14, 4.41e-10, 4.46e-32, 5.50e-12, 0.718128123, 6.57e-11,
    4.59e-17, 1.20e-12, 3.73e-22, 1.57e-30, 8.86e-22, 1.37e-36, 9.30e-07,
    0.0027832, 0.020620068, 0.06690143, 0.000000138, 0.011610708, 0.064202734,
    0.000135576, 3.25e-77, 6.22e-28, 2.52e-31, 0.052381081, 1.70e-60, 2.22e-24,
    0.0000463, 0.489890016
]

Gruner = [
    None, 1.68e-15, 0.599659929, 2.72e-18, 6.52e-07, 0.377907722, 0.588015124,
    0.826724388, 0.070528685, 3.71e-10, 0.047052518, 0.25206758, 2.25e-11,
    0.876577352, 0.003306507, 0.471641339, 0.935326582, 0.475645601,
    0.759101746, 0.748088688, 0.116735425, 0.562770681, 0.198887884,
    0.00033724, 0.134982001, 0.915495092, 0.422337816, 0.162429782,
    0.137675951, 0.986518062, 1.15e-09, 0.119590661, 0.250894514, 0.3893896,
    0.881877399, 0.188756192, 0.277815436, 2.99e-09, 0.402792102, 1.50e-17,
    0.052885387, 8.17e-11, 0.473189739, 0.794182973, 1.09e-15, 0.006881159,
    0.568510873, 0.087388215, 9.59e-11, 0.551220572, 8.13e-39, 0.153421276,
    0.070594589, 0.112059302, 0.403818663, 0.04048619, 0.058182994,
    0.000579232, 0.337892265, 0.134806349, 0.009592926, 0.873514005,
    0.790425787, 1.0, 0.191220066, 0.278353036, 0.709587441, 0.151814965,
    0.325252666, 0.391459616, 0.80993703, 0.550937314, 0.350983351,
    0.66490897, 0.627795631, 0.018171793, 0.357006096, 0.658186238,
    0.308844781, 0.616217957, 0.510758858, 0.929941766, 0.004422378,
    0.194039727, 0.051929161, 0.317689331, 0.256085952, 0.501188048,
    0.337980484, 0.093723681, 0.025954209, 0.204703904, 0.426378425,
    0.974167639, 0.039344811, 0.273364665, 0.277879048, None, 0.966643691,
    0.117136698, 8.05e-35, 2.81e-26, 9.24e-22, 0.000125768, 0.0, 0.0,
    1.94e-298, 4.32e-171
]

Merkin = [
    0.767242312, 0.124220333, 0.71284936, 0.075791662, 0.023165695,
    0.05075704, 0.677704924, 0.266969332, 0.875137201, 0.96500682,
    0.362003219, 0.128932725, 0.895500119, 0.682766835, 0.69961087,
    0.7354272, 0.490178969, None, 0.275445423, 0.220552497, 0.197115293,
    0.861468121, None, 0.43869593, 0.100423372, 0.04275335, 0.824639534,
    0.490178969, 0.611375515, None, 0.043853405, 0.735336823, 0.12661958,
    0.024993997, None, 1.0, 0.655338749, 0.616973443, 0.509771534,
    0.323352999, 1.0, 0.031123118, 1.0, 0.271934354, 0.398604236, None,
    0.052632893, None, 0.186966598, 0.029058317, 0.161755096, 0.539349299,
    0.721168619, 0.490178969, None, None, 0.601541584, 0.75727824,
    0.563052158, 0.502376991, 0.330315643, 0.540203372, 1.0, 1.0, None,
    0.320087709, 0.978426487, 1.0, 0.28562654, 0.540138819, 0.760904698,
    None, None, 0.735336823, 0.132060727, 0.033614222, 0.721168619,
    0.332991601, 0.06461157, 0.534403105, 0.92538221, 0.435820154,
    0.176152152, 0.608302961, 0.039811787, 0.682135085, 0.37112575,
    0.308678679, 0.740254197, 0.137651318, 0.503761429, 0.490178969,
    0.67878964, 0.803975443, 0.903606351, None, 0.509771534, 1.0,
    0.517553873, 0.371889842, 0.123347443, 0.096468323, 0.142381153,
    0.500923363, 0.140417228, 0.214249987, 0.354093297, 0.84186216
]

Sollner = [
    2.56e-36, 0.158323541, 0.026628258, 0.0000458, 0.015353459, 0.00987856,
    0.053812717, 0.035660428, 0.023316873, 0.061769502, 0.463053576,
    0.422066378, 0.107855815, None, 0.229004598, 0.02491763, None,
    0.267906474, None, 0.710395296, 0.140327101, 0.031444805, None,
    0.306519973, 0.134109408, 0.365288066, 0.643876357, 0.095256332,
    0.764198604, None, 0.409590665, None, 0.623766336, 0.244404825, None,
    None, 0.659279268, 0.017205195, None, 0.354609794, None, 0.239481454,
    None, None, 0.430975383, None, 0.424107613, None, 0.032776305,
    0.00326073, 0.000408467, None, 0.362623097, None, None, 0.154286608,
    0.770989207, 0.24708436, None, None, None, 0.770989207, None,
    0.267906474, 0.267906474, None, None, 0.154286608, None, None, None,
    None, None, None, None, None, None, None, 0.269267816, 0.267906474,
    None, None, 0.00277763, 0.269267816, None, 0.270629172, None, None,
    None, 0.270629172, None, None, 0.691051673, None, None, None, None,
    0.267906474, 3.45e-17, 1.63e-08, 3.01e-10, 0.270629172, 1.59e-11,
    0.000139018, 6.79e-06, 0.000156542
]

Wang12 = [
    1.63e-33, 0.00062919, 0.281998351, 0.03296407, 0.016257803, 6.60e-08,
    0.0000446, 6.33e-06, 0.000069, 0.201033668, 0.091324287, 0.013766031,
    0.0000202, 1.0, 0.063668538, 0.677684822, None, None, None, 0.331098894,
    0.804817156, 0.706566146, None, 0.614820552, 0.613818617, 1.0,
    0.249716019, 0.302759712, 1.0, None, 0.244140206, None, 0.72997432,
    0.414099137, 0.148126828, 0.148126828, 0.191287317, 0.091529573, None,
    0.528499264, None, 0.37428527, 0.148126828, None, 0.249885308, None,
    0.695835831, 1.0, 0.101326698, 0.719973999, 0.000805197, 1.0, None,
    None, 1.0, 0.302648349, None, 0.727194643, 0.008216468, None, 0.14805104,
    None, None, 0.037771631, 0.037771631, 1.0, 0.658493984, 0.30265978,
    0.148016067, 0.302800077, 0.148016067, 1.0, 1.0, None, 1.0, 1.0,
    0.148126828, 0.148126828, 1.0, 1.0, 1.0, None, 1.0, 1.0, 1.0, 1.0,
    0.037703529, 1.0, 1.0, 1.0, None, 0.024789062, 0.148126828,
    0.148028014, 0.551083278, None, None, None, 0.521850513, 0.522211449,
    1.80e-14, 6.15e-13, 1.60e-16, 0.024721649, 0.0000129, 0.001411376,
    0.00425326, 0.008923657
]

Wang20 = [
    8.62e-77, 0.048704333, 0.256122042, 9.61e-08, 6.25e-13, 3.53e-15,
    6.18e-16, 1.48e-06, 9.37e-07, 0.008536209, 0.00721202, 0.063481009,
    0.000912773, None, 0.604673144, 0.576546673, 0.104368219, 0.429416159,
    1.0, 0.495183258, 0.351410479, 0.471713843, 0.737510027, 0.883342683,
    0.089160328, 0.026232848, 0.206375426, 0.443339842, 0.898671059,
    None, 0.910066176, 1.0, 0.465750105, 0.762529608, 0.234928879,
    0.234928879, 0.386766805, 0.059867652, None, 0.12201876, 1.0,
    0.49785938, None, None, 0.315769954, 1.0, 0.44476314, 0.14600694,
    0.341260772, 0.205553561, 2.83e-09, 0.433223442, 0.016378394, 1.0,
    None, None, 0.974138513, 0.000553017, 0.268791611, 0.494976452,
    0.171206826, None, None, None, None, 0.263867545, 0.794680039, None,
    None, 0.787822186, 0.385495855, 0.21482572, None, 0.468115071,
    None, 0.30298353, 0.234928879, 0.234928879, 0.283431179, 0.456329418,
    0.709685608, 0.102787976, 0.947833357, 0.185176305, 0.885134975,
    0.100224722, 0.471133735, 0.251050188, 0.788829044, 0.022380076,
    0.114915691, 0.924140482, 0.01675463, 0.958544896, 0.243547873, None,
    0.135622759, 0.180175093, 0.431327538, 0.68935266, 1.46e-22, 3.33e-09,
    1.75e-06, 0.168725849, 1.08e-15, 0.0000413, 0.0000413, 0.113222093
]


combined = [1.1297708186508103e-179, 9.02314482677783e-31, 6.228964752485065e-15, 8.867999771861635e-29, 4.5307155347968584e-24, 9.853582853497894e-28, 5.819734423799532e-16, 1.7624534489076034e-10, 7.906036717139117e-13, 2.8062660858966368e-18, 1.7029078292041936e-05, 0.005298389099752097, 3.0041579088753722e-40, 0.0011877337386172902, 0.02682434302449627, 0.23603001165875115, 0.03221010842380577, 0.29260817148578305, 0.07592966759032407, 5.751513663320609e-34, 3.871151933572492e-12, 0.004610237232258111, 0.1720399293789077, 0.016999894598446565, 3.0611433732909818e-12, 0.00010877627529875321, 0.7876189637879405, 0.14881172390445274, 0.14000858191311275, 0.11423689667440573, 7.233328069945173e-10, 0.12792771865253635, 0.0016196952568488271, 0.013624988496314307, 0.11284613001571357, 0.01396991235357321, 0.21010865093408712, 7.845366476594123e-18, 0.03210773715741068, 3.575474726942124e-36, 0.03048525829854873, 1.5413472596525448e-20, 0.26738886277265245, 0.003424285621158723, 2.5992591001268736e-17, 3.449431915335096e-05, 0.10592780957743977, 0.16290961497680317, 2.994341473705146e-21, 0.0017472396084939387, 1.243616264377236e-55, 0.7348713956204449, 0.025534802341338876, 0.2374090608611215, 0.00032070024809483904, 2.879870049481433e-06, 0.03685316249714029, 0.000721989688393906, 5.433175968107896e-10, 3.882167663885629e-05, 0.00011961070033289916, 0.3742168110801289, 0.02394836304866941, 0.005967625518943266, 0.007006689057584282, 2.573446256662701e-11, 2.872776326600217e-20, 0.015414848391667093, 1.6678997893718685e-05, 0.0016291015235803791, 6.874582716831966e-07, 1.4503012948250877e-06, 1.3237022374053955e-07, 3.2029110569260897e-06, 0.0030011132973535755, 5.150410891284122e-05, 8.08497393114777e-20, 1.7572056683837512e-14, 1.739619701013847e-14, 2.2138072565011977e-08, 2.227663303223837e-09, 5.359630229260798e-07, 1.3001974910877884e-28, 1.3692857930331536e-09, 0.034159963205093055, 2.1239849916829047e-07, 1.9179057132697968e-14, 1.443156420523336e-09, 3.992784359114e-17, 1.4049046750064118e-27, 9.352684474551539e-20, 2.898744982120121e-33, 5.927092622043432e-06, 0.09677130618261746, 0.005327563663426697, 0.09146956675310332, 2.4602368728236643e-06, 0.1366947457367395, 0.552535805810396, 0.006747321637715752, 1.0510401533665371e-176, 3.2119145501644e-85, 3.7197204582750137e-84, 0.00010989137352530735, 7.268106552074296e-108, 2.948819225337281e-39, 9.58727499762e-312, 5.403534322620706e-170]

combined_stouffer = [4.200271756547875e-142, 2.744748288996827e-23, 3.336719687713625e-07, 3.154168649960719e-24, 3.418142916466994e-18, 2.892265014015798e-21, 1.3571705895977296e-08, 2.9763517344470835e-08, 2.6966312462932237e-10, 2.9008021908302205e-10, 8.894517293778249e-06, 0.0018533716123177288, 1.5923860982790374e-25, 1.0, 0.09369021194689264, 0.1954141804706428, 0.12485649284005479, 1.0, 1.0, 1.270333183302965e-07, 1.8755878593505165e-05, 0.035607827260108894, 0.13291127041107093, 0.057506124838289686, 1.2037062314286676e-06, 1.0, 0.8278022373526941, 0.05900309101414951, 1.0, 0.3681260871610903, 3.647943516782394e-06, 1.0, 0.007007074043095696, 0.010931922416091162, 0.09280083787824506, 1.0, 0.1348440015075964, 1.239344116485448e-13, 0.05288275567542933, 9.793692149949506e-19, 1.0, 5.364241367247656e-13, 1.0, 0.01668098484937755, 5.921756273432331e-08, 1.0, 0.07898594601450054, 1.0, 5.573311651356684e-14, 0.0021694409245331695, 6.646030348462602e-41, 1.0, 1.0, 1.0, 1.0, 0.00017542803806080897, 0.2894339832948929, 0.019202060606066218, 6.095573360514005e-06, 0.00038283564162395773, 1.0, 0.42785677491412877, 1.0, 1.0, 0.0036456077833955294, 1.0, 0.00018890765499668153, 1.0, 1.0, 0.02250641487380204, 0.002910761995867022, 1.0, 1.0, 0.020848057891257495, 1.0, 1.0, 2.0594927778482183e-06, 1.0, 1.0, 1.0, 1.0, 0.011347148499409385, 1.0, 1.0, 1.0, 1.0, 2.646195426716297e-07, 1.0, 1.0, 1.0, 4.6213886828442395e-10, 2.944840981537099e-11, 0.0001623289535361516, 0.5246131330596255, 0.021321746707470942, 0.06860030383716027, 0.00011227219714195356, 1.0, 0.599853353221311, 0.021162029995861056, 1.852462923154566e-146, 8.095296538345463e-76, 1.6144285229009643e-73, 0.00011314513435843357, 7.803196293153186e-82, 4.5370072881406645e-31, 9.196263759000768e-110, 2.3129280527733276e-47]


print(len(Brawand))
print(len(ENCODE))
print(len(Gruner))
print(len(Merkin))
print(len(Sollner))
print(len(Wang12))
print(len(Wang20))
print(len(combined))
print(len(combined_stouffer))

adjusted = benjamini_hochberg_safe(Brawand)
print(adjusted)
adjusted = benjamini_hochberg_safe(ENCODE)
print(adjusted)
adjusted = benjamini_hochberg_safe(Gruner)
print(adjusted)
adjusted = benjamini_hochberg_safe(Merkin)
print(adjusted)
adjusted = benjamini_hochberg_safe(Sollner)
print(adjusted)
adjusted = benjamini_hochberg_safe(Wang12)
print(adjusted)
adjusted = benjamini_hochberg_safe(Wang20)
print(adjusted)
adjusted = benjamini_hochberg_safe(combined)
print(adjusted)
adjusted = benjamini_hochberg_safe(combined_stouffer)
print(adjusted)



import csv

# Suppose these are your lists of p-values
datasets = {
    "Brawand": Brawand,
    "ENCODE": ENCODE,
    "Gruner": Gruner,
    "Merkin": Merkin,
    "Sollner": Sollner,
    "Wang12": Wang12,
    "Wang20": Wang20
}

# Apply BH correction to each dataset
adjusted_data = {}
for name, pvals in datasets.items():
    adjusted_data[name] = benjamini_hochberg_safe(pvals)

# Determine the maximum number of rows (some lists may be shorter)
max_len = max(len(vals) for vals in adjusted_data.values())

# Pad shorter lists with None to align rows
for name, vals in adjusted_data.items():
    if len(vals) < max_len:
        adjusted_data[name] += [None] * (max_len - len(vals))

# Write to CSV
with open("adjusted_pvalues.csv", "w", newline="") as f:
    writer = csv.writer(f)
    # Write header
    writer.writerow(adjusted_data.keys())
    # Write rows
    for i in range(max_len):
        row = [adjusted_data[name][i] for name in adjusted_data.keys()]
        writer.writerow(row)

print("CSV file 'adjusted_pvalues.csv' created successfully.")
